#!/bin/bash

{{ if eq .chezmoi.os "darwin" }}

# エラー発生時にスクリプトを終了、未定義変数参照時にエラー、パイプラインエラーを捕捉
set -euo pipefail

APPS_DIR="$HOME/Applications/Chrome Apps.localized"
# 複数のソースディレクトリを配列で定義
SOURCE_APPS_DIRS=("$HOME/corp-dotfiles/apps" "$HOME/.local/share/chezmoi/apps") # 必要に応じてディレクトリを追加

sync_chrome_apps() {
    local source_dir="$1" # 関数の第一引数としてソースディレクトリを受け取る

    # echo "Chrome App Sync Start for source: ${source_dir}"

    # Chrome Apps.localized ディレクトリが存在するか確認、なければ作成
    if [ ! -d "$APPS_DIR" ]; then
        echo "Creating directory: ${APPS_DIR}"
        mkdir -p "$APPS_DIR" || {
            echo "Error: Failed to create directory ${APPS_DIR}" >&2
            return 1
        } # mkdir 失敗時のエラー処理
    fi

    # ソースディレクトリが存在するか確認
    if [ ! -d "$source_dir" ]; then
        return 0 # ソースディレクトリがなくても処理を継続
    fi

    # ソースディレクトリ内の .app を APPS_DIR にコピー
    find "$source_dir" -maxdepth 1 -name "*.app" -print0 | while IFS= read -r -d $'\0' app_path; do
        app_name_base=$(basename "$app_path")
        target_app_path="$APPS_DIR/$app_name_base"

        if [ ! -d "$target_app_path" ]; then
            echo "Copying app: ${app_name_base} from ${source_dir}..."
            cp -R "$app_path" "$APPS_DIR/" || echo "Error: Failed to copy ${app_name_base} from ${source_dir} to ${APPS_DIR}" >&2 # cp 失敗時のエラー処理
        fi
    done

    # echo "Chrome App Sync Complete for source: ${source_dir}"
}

# 定義した関数を各ソースディレクトリに対して実行
for source_apps_dir in "${SOURCE_APPS_DIRS[@]}"; do
    sync_chrome_apps "$source_apps_dir" # 関数を呼び出し
done

# echo "All Chrome App Sync Tasks Completed"

{{ end }}
